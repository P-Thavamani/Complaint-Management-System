{"ast":null,"code":"import React,{useContext}from'react';import{Navigate}from'react-router-dom';import{AuthContext}from'../../context/AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";const AdminRoute=_ref=>{let{children}=_ref;const{user,loading,isAdmin}=useContext(AuthContext);// Show loading state while checking authentication\nif(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center items-center h-screen\",children:/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary-600\"})});}// Redirect to login if not authenticated\nif(!user){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true});}// Redirect to dashboard if not admin\nif(!isAdmin()){return/*#__PURE__*/_jsx(Navigate,{to:\"/dashboard\",replace:true});}// Render children if authenticated and admin\nreturn children;};export default AdminRoute;","map":{"version":3,"names":["React","useContext","Navigate","AuthContext","jsx","_jsx","AdminRoute","_ref","children","user","loading","isAdmin","className","to","replace"],"sources":["C:/Users/thava/OneDrive/Desktop/New folder/Complaint-Management-System/frontend/src/components/auth/AdminRoute.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { AuthContext } from '../../context/AuthContext';\r\n\r\nconst AdminRoute = ({ children }) => {\r\n  const { user, loading, isAdmin } = useContext(AuthContext);\r\n\r\n  // Show loading state while checking authentication\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-screen\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary-600\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Redirect to login if not authenticated\r\n  if (!user) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  // Redirect to dashboard if not admin\r\n  if (!isAdmin()) {\r\n    return <Navigate to=\"/dashboard\" replace />;\r\n  }\r\n\r\n  // Render children if authenticated and admin\r\n  return children;\r\n};\r\n\r\nexport default AdminRoute;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,UAAU,KAAQ,OAAO,CACzC,OAASC,QAAQ,KAAQ,kBAAkB,CAC3C,OAASC,WAAW,KAAQ,2BAA2B,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAExD,KAAM,CAAAC,UAAU,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC9B,KAAM,CAAEE,IAAI,CAAEC,OAAO,CAAEC,OAAQ,CAAC,CAAGV,UAAU,CAACE,WAAW,CAAC,CAE1D;AACA,GAAIO,OAAO,CAAE,CACX,mBACEL,IAAA,QAAKO,SAAS,CAAC,2CAA2C,CAAAJ,QAAA,cACxDH,IAAA,QAAKO,SAAS,CAAC,8EAA8E,CAAM,CAAC,CACjG,CAAC,CAEV,CAEA;AACA,GAAI,CAACH,IAAI,CAAE,CACT,mBAAOJ,IAAA,CAACH,QAAQ,EAACW,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAC,CACzC,CAEA;AACA,GAAI,CAACH,OAAO,CAAC,CAAC,CAAE,CACd,mBAAON,IAAA,CAACH,QAAQ,EAACW,EAAE,CAAC,YAAY,CAACC,OAAO,MAAE,CAAC,CAC7C,CAEA;AACA,MAAO,CAAAN,QAAQ,CACjB,CAAC,CAED,cAAe,CAAAF,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}