{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thava\\\\OneDrive\\\\Desktop\\\\New folder\\\\Complaint-Management-System\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\n// Change this line at the top of the file\nimport axios from '../services/axios';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  // Check if user is already logged in on component mount\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const decoded = jwt_decode(token);\n        // Check if token is expired\n        const currentTime = Date.now() / 1000;\n        if (decoded.exp < currentTime) {\n          // Token expired, log out user\n          logout();\n        } else {\n          // Set user from token\n          setUser(decoded);\n          // Set authorization header for all requests\n          axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n        }\n      } catch (error) {\n        console.error('Invalid token:', error);\n        logout();\n      }\n    }\n    setLoading(false);\n  }, []);\n\n  // Login function\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      const response = await axios.post('/api/auth/login', {\n        email,\n        password\n      });\n      const {\n        token\n      } = response.data;\n\n      // Save token to localStorage\n      localStorage.setItem('token', token);\n\n      // Decode token and set user\n      const decoded = jwt_decode(token);\n      setUser(decoded);\n\n      // Set authorization header for all requests\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      toast.success('Login successful!');\n      navigate('/dashboard');\n      return true;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Login error:', error);\n      toast.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed. Please try again.');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Register function\n  const register = async userData => {\n    try {\n      setLoading(true);\n      const response = await axios.post('/api/auth/register', userData);\n      toast.success('Registration successful! Please log in.');\n      navigate('/login');\n      return true;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Registration error:', error);\n      toast.error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed. Please try again.');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    delete axios.defaults.headers.common['Authorization'];\n    toast.info('You have been logged out.');\n    navigate('/');\n  };\n\n  // Check if user is admin\n  const isAdmin = () => {\n    return user && user.role === 'admin';\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      register,\n      logout,\n      isAdmin\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"lk6viekuCMMpYORkLYLEq0Wsfds=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useNavigate","jwt_decode","axios","toast","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","navigate","token","localStorage","getItem","decoded","currentTime","Date","now","exp","logout","defaults","headers","common","error","console","login","email","password","response","post","data","setItem","success","_error$response","_error$response$data","message","register","userData","_error$response2","_error$response2$data","removeItem","info","isAdmin","role","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/thava/OneDrive/Desktop/New folder/Complaint-Management-System/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport jwt_decode from 'jwt-decode';\r\n// Change this line at the top of the file\r\nimport axios from '../services/axios';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n  \r\n  // Check if user is already logged in on component mount\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      try {\r\n        const decoded = jwt_decode(token);\r\n        // Check if token is expired\r\n        const currentTime = Date.now() / 1000;\r\n        if (decoded.exp < currentTime) {\r\n          // Token expired, log out user\r\n          logout();\r\n        } else {\r\n          // Set user from token\r\n          setUser(decoded);\r\n          // Set authorization header for all requests\r\n          axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n        }\r\n      } catch (error) {\r\n        console.error('Invalid token:', error);\r\n        logout();\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = async (email, password) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post('/api/auth/login', { email, password });\r\n      const { token } = response.data;\r\n      \r\n      // Save token to localStorage\r\n      localStorage.setItem('token', token);\r\n      \r\n      // Decode token and set user\r\n      const decoded = jwt_decode(token);\r\n      setUser(decoded);\r\n      \r\n      // Set authorization header for all requests\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      toast.success('Login successful!');\r\n      navigate('/dashboard');\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      toast.error(error.response?.data?.message || 'Login failed. Please try again.');\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Register function\r\n  const register = async (userData) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post('/api/auth/register', userData);\r\n      toast.success('Registration successful! Please log in.');\r\n      navigate('/login');\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      toast.error(error.response?.data?.message || 'Registration failed. Please try again.');\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    toast.info('You have been logged out.');\r\n    navigate('/');\r\n  };\r\n\r\n  // Check if user is admin\r\n  const isAdmin = () => {\r\n    return user && user.role === 'admin';\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ \r\n      user, \r\n      loading, \r\n      login, \r\n      register, \r\n      logout,\r\n      isAdmin\r\n    }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}