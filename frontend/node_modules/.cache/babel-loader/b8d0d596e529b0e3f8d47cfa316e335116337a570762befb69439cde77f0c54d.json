{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thava\\\\OneDrive\\\\Desktop\\\\New folder\\\\Complaint-Management-System\\\\frontend\\\\src\\\\components\\\\chatbot\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport ChatMessage from './ChatMessage';\nimport VoiceInput from './VoiceInput';\nimport ImageUpload from './ImageUpload';\nimport { useAI } from '../hooks/useAI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = ({\n  onClose\n}) => {\n  _s();\n  const [messages, setMessages] = useState([{\n    type: 'bot',\n    content: 'Hello! I\\'m your AI assistant. How can I help you today? You can type your complaint, use voice input, or upload an image of the issue.',\n    timestamp: new Date(),\n    options: [{\n      id: 'billing',\n      text: 'Billing Issue'\n    }, {\n      id: 'technical',\n      text: 'Technical Problem'\n    }, {\n      id: 'service',\n      text: 'Service Complaint'\n    }, {\n      id: 'feedback',\n      text: 'General Feedback'\n    }, {\n      id: 'inquiry',\n      text: 'Account Inquiry'\n    }, {\n      id: 'other',\n      text: 'Other Issue'\n    }]\n  }]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isVoiceInputActive, setIsVoiceInputActive] = useState(false);\n  const [isImageUploadActive, setIsImageUploadActive] = useState(false);\n  const [showAIFeatures, setShowAIFeatures] = useState(false);\n\n  // Use the AI hook for ticket processing\n  const {\n    isProcessing,\n    createTicket,\n    categorizeComplaint,\n    determinePriority,\n    determineAssignment\n  } = useAI();\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n\n  // Scroll to bottom of messages\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Focus input field when component mounts\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, []);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const handleInputChange = e => {\n    setInput(e.target.value);\n  };\n\n  // Handle option selection from the chatbot options\n  const handleOptionSelect = async (optionId, optionText) => {\n    // Add user message showing their selection\n    const userMessage = {\n      type: 'user',\n      content: `I need help with: ${optionText}`,\n      timestamp: new Date(),\n      isOption: true\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setIsLoading(true);\n    try {\n      // Process the selected option\n      const category = optionId; // Use the option ID as the category\n      const priority = optionId === 'technical' || optionId === 'service' ? 'high' : 'medium';\n\n      // Add bot response based on the selected option\n      let responseContent = '';\n      switch (optionId) {\n        case 'billing':\n          responseContent = 'I understand you have a billing issue. Could you please provide more details about your billing concern?';\n          break;\n        case 'technical':\n          responseContent = 'I see you\\'re experiencing a technical problem. Could you describe the issue you\\'re facing in detail?';\n          break;\n        case 'service':\n          responseContent = 'I\\'m sorry to hear you have a service complaint. Please tell me more about the service issue you encountered.';\n          break;\n        case 'feedback':\n          responseContent = 'Thank you for wanting to provide feedback. I\\'d love to hear your thoughts on our service.';\n          break;\n        case 'inquiry':\n          responseContent = 'I\\'d be happy to help with your account inquiry. What specific information are you looking for?';\n          break;\n        case 'other':\n          responseContent = 'I understand you have another type of issue. Please describe your concern, and I\\'ll do my best to assist you.';\n          break;\n        default:\n          responseContent = 'Thank you for selecting an option. How can I assist you further with this?';\n      }\n      const botResponse = {\n        type: 'bot',\n        content: responseContent,\n        timestamp: new Date(),\n        category: category\n      };\n      setMessages(prev => [...prev, botResponse]);\n\n      // Create a ticket if it's a complaint category\n      if (['billing', 'technical', 'service'].includes(optionId)) {\n        // Create ticket with AI-determined category and priority\n        const ticketResult = await createTicket(optionText, category, priority);\n        if (ticketResult && ticketResult.success) {\n          // Add ticket creation confirmation\n          const ticketMessage = {\n            type: 'bot',\n            content: `I've created a ticket for your ${optionText.toLowerCase()}. Category: ${category}, Priority: ${priority}`,\n            timestamp: new Date(),\n            ticketCreated: true,\n            ticketId: ticketResult.ticketId\n          };\n          setMessages(prev => [...prev, ticketMessage]);\n          toast.success(`Ticket #${ticketResult.ticketId} has been created for your complaint.`);\n        }\n      }\n    } catch (error) {\n      console.error('Error processing option:', error);\n\n      // Add error message to chat\n      const errorMessage = {\n        type: 'bot',\n        content: 'Sorry, I encountered an error processing your selection. Please try again or type your issue directly.',\n        timestamp: new Date(),\n        isError: true\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!input.trim() && !isVoiceInputActive && !isImageUploadActive) return;\n\n    // Add user message to chat\n    const userMessage = {\n      type: 'user',\n      content: input,\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    setIsLoading(true);\n    try {\n      // Send message to backend\n      const response = await axios.post('/api/chatbot/message', {\n        message: input,\n        messageType: 'text'\n      });\n\n      // Process with AI features\n      const category = categorizeComplaint(input);\n      const priority = determinePriority(input);\n\n      // Add initial bot response to chat\n      const initialResponse = {\n        type: 'bot',\n        content: response.data.message,\n        timestamp: new Date(),\n        suggestTicket: response.data.suggestTicket || false\n      };\n      setMessages(prev => [...prev, initialResponse]);\n\n      // If the message suggests creating a ticket, show AI features\n      if (response.data.suggestTicket || input.toLowerCase().includes('complaint') || input.toLowerCase().includes('issue') || input.toLowerCase().includes('problem')) {\n        // Add AI features message\n        const aiFeatureMessage = {\n          type: 'bot',\n          content: 'I can help you with your complaint using these AI features:',\n          timestamp: new Date(),\n          aiFeatures: [{\n            title: 'Automatic Ticket Creation',\n            description: 'Upon registering a complaint, the system automatically generates a ticket with all relevant details.'\n          }, {\n            title: 'Intelligent Categorization',\n            description: 'AI will categorize tickets based on predefined categories (e.g., billing, technical, service) using machine learning models.'\n          }, {\n            title: 'Prioritization System',\n            description: 'AI will assign priority levels (urgent, high, medium, low) based on the complaint\\'s nature and keywords.'\n          }, {\n            title: 'Dynamic Assignment',\n            description: 'The system will use AI to intelligently assign tickets to the relevant teams or agents based on expertise, workload, and availability.'\n          }]\n        };\n        setMessages(prev => [...prev, aiFeatureMessage]);\n\n        // Create ticket with AI-determined category and priority\n        const ticketResult = await createTicket(input, category, priority);\n        if (ticketResult.success) {\n          // Add ticket creation confirmation\n          const ticketMessage = {\n            type: 'bot',\n            content: `I've analyzed your complaint and created a ticket for you. Category: ${category}, Priority: ${priority}`,\n            timestamp: new Date(),\n            ticketCreated: true,\n            ticketId: ticketResult.ticketId\n          };\n          setMessages(prev => [...prev, ticketMessage]);\n          toast.success(`Ticket #${ticketResult.ticketId} has been created for your complaint.`);\n        }\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n\n      // Add error message to chat\n      const errorMessage = {\n        type: 'bot',\n        content: 'Sorry, I encountered an error processing your request. Please try again later.',\n        timestamp: new Date(),\n        isError: true\n      };\n      setMessages(prev => [...prev, errorMessage]);\n      toast.error('Failed to process your message. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleVoiceInput = transcript => {\n    // Add user voice message to chat\n    const userMessage = {\n      type: 'user',\n      content: transcript,\n      timestamp: new Date(),\n      isVoice: true\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setIsLoading(true);\n    setIsVoiceInputActive(false);\n\n    // Process voice input\n    processMessage(transcript, 'voice');\n  };\n  const handleImageUpload = async imageFile => {\n    // Add user image message to chat\n    const userMessage = {\n      type: 'user',\n      content: 'Image uploaded',\n      timestamp: new Date(),\n      isImage: true,\n      imageUrl: URL.createObjectURL(imageFile)\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setIsLoading(true);\n    setIsImageUploadActive(false);\n    try {\n      // Create form data for image upload\n      const formData = new FormData();\n      formData.append('image', imageFile);\n\n      // Send image to backend for processing\n      const response = await axios.post('/api/chatbot/image', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      // Add bot response to chat\n      const botResponse = {\n        type: 'bot',\n        content: response.data.message,\n        timestamp: new Date(),\n        detectedObjects: response.data.detectedObjects,\n        ticketCreated: response.data.ticketCreated,\n        ticketId: response.data.ticketId\n      };\n      setMessages(prev => [...prev, botResponse]);\n\n      // Show toast if ticket was created\n      if (response.data.ticketCreated) {\n        toast.success(`Ticket #${response.data.ticketId} has been created for your complaint.`);\n      }\n    } catch (error) {\n      console.error('Error processing image:', error);\n\n      // Add error message to chat\n      const errorMessage = {\n        type: 'bot',\n        content: 'Sorry, I encountered an error processing your image. Please try again later.',\n        timestamp: new Date(),\n        isError: true\n      };\n      setMessages(prev => [...prev, errorMessage]);\n      toast.error('Failed to process your image. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const processMessage = async (message, type) => {\n    try {\n      // Send message to backend\n      const response = await axios.post('/api/chatbot/message', {\n        message,\n        messageType: type\n      });\n\n      // Add bot response to chat\n      const botResponse = {\n        type: 'bot',\n        content: response.data.message,\n        timestamp: new Date(),\n        ticketCreated: response.data.ticketCreated,\n        ticketId: response.data.ticketId\n      };\n      setMessages(prev => [...prev, botResponse]);\n\n      // Show toast if ticket was created\n      if (response.data.ticketCreated) {\n        toast.success(`Ticket #${response.data.ticketId} has been created for your complaint.`);\n      }\n    } catch (error) {\n      console.error('Error processing message:', error);\n\n      // Add error message to chat\n      const errorMessage = {\n        type: 'bot',\n        content: 'Sorry, I encountered an error processing your request. Please try again later.',\n        timestamp: new Date(),\n        isError: true\n      };\n      setMessages(prev => [...prev, errorMessage]);\n      toast.error('Failed to process your message. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const toggleVoiceInput = () => {\n    setIsVoiceInputActive(!isVoiceInputActive);\n    setIsImageUploadActive(false);\n  };\n  const toggleImageUpload = () => {\n    setIsImageUploadActive(!isImageUploadActive);\n    setIsVoiceInputActive(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow-xl w-full max-w-md h-[500px] flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-primary-600 text-white px-4 py-3 rounded-t-lg flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"h-6 w-6 mr-2\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold\",\n          children: \"AI Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        className: \"text-white hover:text-gray-200 focus:outline-none\",\n        \"aria-label\": \"Close chatbot\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"h-5 w-5\",\n          viewBox: \"0 0 20 20\",\n          fill: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            fillRule: \"evenodd\",\n            d: \"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\",\n            clipRule: \"evenodd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 p-4 overflow-y-auto\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n        message: message,\n        onOptionSelect: handleOptionSelect\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 11\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center mt-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-200 rounded-full p-2 max-w-[80%]\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-2 h-2 bg-gray-500 rounded-full animate-bounce\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-2 h-2 bg-gray-500 rounded-full animate-bounce\",\n              style: {\n                animationDelay: '0.2s'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-2 h-2 bg-gray-500 rounded-full animate-bounce\",\n              style: {\n                animationDelay: '0.4s'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this), isVoiceInputActive && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-4 py-2 bg-gray-50 border-t border-gray-200\",\n      children: /*#__PURE__*/_jsxDEV(VoiceInput, {\n        onTranscript: handleVoiceInput,\n        onCancel: () => setIsVoiceInputActive(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 9\n    }, this), isImageUploadActive && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-4 py-2 bg-gray-50 border-t border-gray-200\",\n      children: /*#__PURE__*/_jsxDEV(ImageUpload, {\n        onImageUpload: handleImageUpload,\n        onCancel: () => setIsImageUploadActive(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"p-4 border-t border-gray-200 flex items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: toggleVoiceInput,\n        className: `p-2 rounded-full mr-2 focus:outline-none ${isVoiceInputActive ? 'bg-red-100 text-red-600' : 'text-gray-500 hover:text-primary-600'}`,\n        \"aria-label\": \"Voice input\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"h-5 w-5\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: toggleImageUpload,\n        className: `p-2 rounded-full mr-2 focus:outline-none ${isImageUploadActive ? 'bg-blue-100 text-blue-600' : 'text-gray-500 hover:text-primary-600'}`,\n        \"aria-label\": \"Image upload\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"h-5 w-5\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: handleInputChange,\n        placeholder: \"Type your message...\",\n        className: \"flex-1 border border-gray-300 rounded-full px-4 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent\",\n        disabled: isLoading || isVoiceInputActive || isImageUploadActive,\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"ml-2 bg-primary-600 text-white rounded-full p-2 hover:bg-primary-700 focus:outline-none disabled:opacity-50\",\n        disabled: !input.trim() || isLoading || isVoiceInputActive || isImageUploadActive,\n        \"aria-label\": \"Send message\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"h-5 w-5\",\n          viewBox: \"0 0 20 20\",\n          fill: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            fillRule: \"evenodd\",\n            d: \"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-8.707l-3-3a1 1 0 00-1.414 0l-3 3a1 1 0 001.414 1.414L9 9.414V13a1 1 0 102 0V9.414l1.293 1.293a1 1 0 001.414-1.414z\",\n            clipRule: \"evenodd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 363,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"1HKZGYWsVCWsXq3nklVUn0HtuBI=\", false, function () {\n  return [useAI];\n});\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","toast","ChatMessage","VoiceInput","ImageUpload","useAI","jsxDEV","_jsxDEV","Chatbot","onClose","_s","messages","setMessages","type","content","timestamp","Date","options","id","text","input","setInput","isLoading","setIsLoading","isVoiceInputActive","setIsVoiceInputActive","isImageUploadActive","setIsImageUploadActive","showAIFeatures","setShowAIFeatures","isProcessing","createTicket","categorizeComplaint","determinePriority","determineAssignment","messagesEndRef","inputRef","scrollToBottom","current","focus","_messagesEndRef$curre","scrollIntoView","behavior","handleInputChange","e","target","value","handleOptionSelect","optionId","optionText","userMessage","isOption","prev","category","priority","responseContent","botResponse","includes","ticketResult","success","ticketMessage","toLowerCase","ticketCreated","ticketId","error","console","errorMessage","isError","handleSubmit","preventDefault","trim","response","post","message","messageType","initialResponse","data","suggestTicket","aiFeatureMessage","aiFeatures","title","description","handleVoiceInput","transcript","isVoice","processMessage","handleImageUpload","imageFile","isImage","imageUrl","URL","createObjectURL","formData","FormData","append","headers","detectedObjects","toggleVoiceInput","toggleImageUpload","className","children","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fillRule","clipRule","map","index","onOptionSelect","style","animationDelay","ref","onTranscript","onCancel","onImageUpload","onSubmit","onChange","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/thava/OneDrive/Desktop/New folder/Complaint-Management-System/frontend/src/components/chatbot/Chatbot.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport ChatMessage from './ChatMessage';\r\nimport VoiceInput from './VoiceInput';\r\nimport ImageUpload from './ImageUpload';\r\nimport { useAI } from '../hooks/useAI';\r\n\r\nconst Chatbot = ({ onClose }) => {\r\n  const [messages, setMessages] = useState([{\r\n    type: 'bot',\r\n    content: 'Hello! I\\'m your AI assistant. How can I help you today? You can type your complaint, use voice input, or upload an image of the issue.',\r\n    timestamp: new Date(),\r\n    options: [\r\n      { id: 'billing', text: 'Billing Issue' },\r\n      { id: 'technical', text: 'Technical Problem' },\r\n      { id: 'service', text: 'Service Complaint' },\r\n      { id: 'feedback', text: 'General Feedback' },\r\n      { id: 'inquiry', text: 'Account Inquiry' },\r\n      { id: 'other', text: 'Other Issue' }\r\n    ]\r\n  }]);\r\n  const [input, setInput] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isVoiceInputActive, setIsVoiceInputActive] = useState(false);\r\n  const [isImageUploadActive, setIsImageUploadActive] = useState(false);\r\n  const [showAIFeatures, setShowAIFeatures] = useState(false);\r\n  \r\n  // Use the AI hook for ticket processing\r\n  const { isProcessing, createTicket, categorizeComplaint, determinePriority, determineAssignment } = useAI();\r\n  \r\n  const messagesEndRef = useRef(null);\r\n  const inputRef = useRef(null);\r\n\r\n  // Scroll to bottom of messages\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  // Focus input field when component mounts\r\n  useEffect(() => {\r\n    if (inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, []);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n  \r\n  // Handle option selection from the chatbot options\r\n  const handleOptionSelect = async (optionId, optionText) => {\r\n    // Add user message showing their selection\r\n    const userMessage = {\r\n      type: 'user',\r\n      content: `I need help with: ${optionText}`,\r\n      timestamp: new Date(),\r\n      isOption: true\r\n    };\r\n    \r\n    setMessages(prev => [...prev, userMessage]);\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      // Process the selected option\r\n      const category = optionId; // Use the option ID as the category\r\n      const priority = optionId === 'technical' || optionId === 'service' ? 'high' : 'medium';\r\n      \r\n      // Add bot response based on the selected option\r\n      let responseContent = '';\r\n      \r\n      switch(optionId) {\r\n        case 'billing':\r\n          responseContent = 'I understand you have a billing issue. Could you please provide more details about your billing concern?';\r\n          break;\r\n        case 'technical':\r\n          responseContent = 'I see you\\'re experiencing a technical problem. Could you describe the issue you\\'re facing in detail?';\r\n          break;\r\n        case 'service':\r\n          responseContent = 'I\\'m sorry to hear you have a service complaint. Please tell me more about the service issue you encountered.';\r\n          break;\r\n        case 'feedback':\r\n          responseContent = 'Thank you for wanting to provide feedback. I\\'d love to hear your thoughts on our service.';\r\n          break;\r\n        case 'inquiry':\r\n          responseContent = 'I\\'d be happy to help with your account inquiry. What specific information are you looking for?';\r\n          break;\r\n        case 'other':\r\n          responseContent = 'I understand you have another type of issue. Please describe your concern, and I\\'ll do my best to assist you.';\r\n          break;\r\n        default:\r\n          responseContent = 'Thank you for selecting an option. How can I assist you further with this?';\r\n      }\r\n      \r\n      const botResponse = {\r\n        type: 'bot',\r\n        content: responseContent,\r\n        timestamp: new Date(),\r\n        category: category\r\n      };\r\n      \r\n      setMessages(prev => [...prev, botResponse]);\r\n      \r\n      // Create a ticket if it's a complaint category\r\n      if (['billing', 'technical', 'service'].includes(optionId)) {\r\n        // Create ticket with AI-determined category and priority\r\n        const ticketResult = await createTicket(optionText, category, priority);\r\n        \r\n        if (ticketResult && ticketResult.success) {\r\n          // Add ticket creation confirmation\r\n          const ticketMessage = {\r\n            type: 'bot',\r\n            content: `I've created a ticket for your ${optionText.toLowerCase()}. Category: ${category}, Priority: ${priority}`,\r\n            timestamp: new Date(),\r\n            ticketCreated: true,\r\n            ticketId: ticketResult.ticketId\r\n          };\r\n          \r\n          setMessages(prev => [...prev, ticketMessage]);\r\n          toast.success(`Ticket #${ticketResult.ticketId} has been created for your complaint.`);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error processing option:', error);\r\n      \r\n      // Add error message to chat\r\n      const errorMessage = {\r\n        type: 'bot',\r\n        content: 'Sorry, I encountered an error processing your selection. Please try again or type your issue directly.',\r\n        timestamp: new Date(),\r\n        isError: true\r\n      };\r\n      \r\n      setMessages(prev => [...prev, errorMessage]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!input.trim() && !isVoiceInputActive && !isImageUploadActive) return;\r\n\r\n    // Add user message to chat\r\n    const userMessage = {\r\n      type: 'user',\r\n      content: input,\r\n      timestamp: new Date()\r\n    };\r\n    \r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInput('');\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      // Send message to backend\r\n      const response = await axios.post('/api/chatbot/message', {\r\n        message: input,\r\n        messageType: 'text'\r\n      });\r\n\r\n      // Process with AI features\r\n      const category = categorizeComplaint(input);\r\n      const priority = determinePriority(input);\r\n      \r\n      // Add initial bot response to chat\r\n      const initialResponse = {\r\n        type: 'bot',\r\n        content: response.data.message,\r\n        timestamp: new Date(),\r\n        suggestTicket: response.data.suggestTicket || false\r\n      };\r\n      \r\n      setMessages(prev => [...prev, initialResponse]);\r\n      \r\n      // If the message suggests creating a ticket, show AI features\r\n      if (response.data.suggestTicket || input.toLowerCase().includes('complaint') || \r\n          input.toLowerCase().includes('issue') || input.toLowerCase().includes('problem')) {\r\n        \r\n        // Add AI features message\r\n        const aiFeatureMessage = {\r\n          type: 'bot',\r\n          content: 'I can help you with your complaint using these AI features:',\r\n          timestamp: new Date(),\r\n          aiFeatures: [\r\n            { title: 'Automatic Ticket Creation', description: 'Upon registering a complaint, the system automatically generates a ticket with all relevant details.' },\r\n            { title: 'Intelligent Categorization', description: 'AI will categorize tickets based on predefined categories (e.g., billing, technical, service) using machine learning models.' },\r\n            { title: 'Prioritization System', description: 'AI will assign priority levels (urgent, high, medium, low) based on the complaint\\'s nature and keywords.' },\r\n            { title: 'Dynamic Assignment', description: 'The system will use AI to intelligently assign tickets to the relevant teams or agents based on expertise, workload, and availability.' }\r\n          ]\r\n        };\r\n        \r\n        setMessages(prev => [...prev, aiFeatureMessage]);\r\n        \r\n        // Create ticket with AI-determined category and priority\r\n        const ticketResult = await createTicket(input, category, priority);\r\n        \r\n        if (ticketResult.success) {\r\n          // Add ticket creation confirmation\r\n          const ticketMessage = {\r\n            type: 'bot',\r\n            content: `I've analyzed your complaint and created a ticket for you. Category: ${category}, Priority: ${priority}`,\r\n            timestamp: new Date(),\r\n            ticketCreated: true,\r\n            ticketId: ticketResult.ticketId\r\n          };\r\n          \r\n          setMessages(prev => [...prev, ticketMessage]);\r\n          toast.success(`Ticket #${ticketResult.ticketId} has been created for your complaint.`);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n      \r\n      // Add error message to chat\r\n      const errorMessage = {\r\n        type: 'bot',\r\n        content: 'Sorry, I encountered an error processing your request. Please try again later.',\r\n        timestamp: new Date(),\r\n        isError: true\r\n      };\r\n      \r\n      setMessages(prev => [...prev, errorMessage]);\r\n      toast.error('Failed to process your message. Please try again.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleVoiceInput = (transcript) => {\r\n    // Add user voice message to chat\r\n    const userMessage = {\r\n      type: 'user',\r\n      content: transcript,\r\n      timestamp: new Date(),\r\n      isVoice: true\r\n    };\r\n    \r\n    setMessages(prev => [...prev, userMessage]);\r\n    setIsLoading(true);\r\n    setIsVoiceInputActive(false);\r\n\r\n    // Process voice input\r\n    processMessage(transcript, 'voice');\r\n  };\r\n\r\n  const handleImageUpload = async (imageFile) => {\r\n    // Add user image message to chat\r\n    const userMessage = {\r\n      type: 'user',\r\n      content: 'Image uploaded',\r\n      timestamp: new Date(),\r\n      isImage: true,\r\n      imageUrl: URL.createObjectURL(imageFile)\r\n    };\r\n    \r\n    setMessages(prev => [...prev, userMessage]);\r\n    setIsLoading(true);\r\n    setIsImageUploadActive(false);\r\n\r\n    try {\r\n      // Create form data for image upload\r\n      const formData = new FormData();\r\n      formData.append('image', imageFile);\r\n\r\n      // Send image to backend for processing\r\n      const response = await axios.post('/api/chatbot/image', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      });\r\n\r\n      // Add bot response to chat\r\n      const botResponse = {\r\n        type: 'bot',\r\n        content: response.data.message,\r\n        timestamp: new Date(),\r\n        detectedObjects: response.data.detectedObjects,\r\n        ticketCreated: response.data.ticketCreated,\r\n        ticketId: response.data.ticketId\r\n      };\r\n\r\n      setMessages(prev => [...prev, botResponse]);\r\n\r\n      // Show toast if ticket was created\r\n      if (response.data.ticketCreated) {\r\n        toast.success(`Ticket #${response.data.ticketId} has been created for your complaint.`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error processing image:', error);\r\n      \r\n      // Add error message to chat\r\n      const errorMessage = {\r\n        type: 'bot',\r\n        content: 'Sorry, I encountered an error processing your image. Please try again later.',\r\n        timestamp: new Date(),\r\n        isError: true\r\n      };\r\n      \r\n      setMessages(prev => [...prev, errorMessage]);\r\n      toast.error('Failed to process your image. Please try again.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const processMessage = async (message, type) => {\r\n    try {\r\n      // Send message to backend\r\n      const response = await axios.post('/api/chatbot/message', {\r\n        message,\r\n        messageType: type\r\n      });\r\n\r\n      // Add bot response to chat\r\n      const botResponse = {\r\n        type: 'bot',\r\n        content: response.data.message,\r\n        timestamp: new Date(),\r\n        ticketCreated: response.data.ticketCreated,\r\n        ticketId: response.data.ticketId\r\n      };\r\n\r\n      setMessages(prev => [...prev, botResponse]);\r\n\r\n      // Show toast if ticket was created\r\n      if (response.data.ticketCreated) {\r\n        toast.success(`Ticket #${response.data.ticketId} has been created for your complaint.`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error processing message:', error);\r\n      \r\n      // Add error message to chat\r\n      const errorMessage = {\r\n        type: 'bot',\r\n        content: 'Sorry, I encountered an error processing your request. Please try again later.',\r\n        timestamp: new Date(),\r\n        isError: true\r\n      };\r\n      \r\n      setMessages(prev => [...prev, errorMessage]);\r\n      toast.error('Failed to process your message. Please try again.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const toggleVoiceInput = () => {\r\n    setIsVoiceInputActive(!isVoiceInputActive);\r\n    setIsImageUploadActive(false);\r\n  };\r\n\r\n  const toggleImageUpload = () => {\r\n    setIsImageUploadActive(!isImageUploadActive);\r\n    setIsVoiceInputActive(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-xl w-full max-w-md h-[500px] flex flex-col\">\r\n      {/* Chatbot Header */}\r\n      <div className=\"bg-primary-600 text-white px-4 py-3 rounded-t-lg flex justify-between items-center\">\r\n        <div className=\"flex items-center\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z\" />\r\n          </svg>\r\n          <h3 className=\"font-semibold\">AI Assistant</h3>\r\n        </div>\r\n        <button \r\n          onClick={onClose}\r\n          className=\"text-white hover:text-gray-200 focus:outline-none\"\r\n          aria-label=\"Close chatbot\"\r\n        >\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n            <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n\r\n      {/* Messages Container */}\r\n      <div className=\"flex-1 p-4 overflow-y-auto\">\r\n        {messages.map((message, index) => (\r\n          <ChatMessage \r\n            key={index} \r\n            message={message} \r\n            onOptionSelect={handleOptionSelect}\r\n          />\r\n        ))}\r\n        {isLoading && (\r\n          <div className=\"flex items-center mt-2\">\r\n            <div className=\"bg-gray-200 rounded-full p-2 max-w-[80%]\">\r\n              <div className=\"flex space-x-2\">\r\n                <div className=\"w-2 h-2 bg-gray-500 rounded-full animate-bounce\"></div>\r\n                <div className=\"w-2 h-2 bg-gray-500 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\r\n                <div className=\"w-2 h-2 bg-gray-500 rounded-full animate-bounce\" style={{ animationDelay: '0.4s' }}></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      {/* Voice Input Component */}\r\n      {isVoiceInputActive && (\r\n        <div className=\"px-4 py-2 bg-gray-50 border-t border-gray-200\">\r\n          <VoiceInput onTranscript={handleVoiceInput} onCancel={() => setIsVoiceInputActive(false)} />\r\n        </div>\r\n      )}\r\n\r\n      {/* Image Upload Component */}\r\n      {isImageUploadActive && (\r\n        <div className=\"px-4 py-2 bg-gray-50 border-t border-gray-200\">\r\n          <ImageUpload onImageUpload={handleImageUpload} onCancel={() => setIsImageUploadActive(false)} />\r\n        </div>\r\n      )}\r\n\r\n      {/* Input Form */}\r\n      <form onSubmit={handleSubmit} className=\"p-4 border-t border-gray-200 flex items-center\">\r\n        <button \r\n          type=\"button\" \r\n          onClick={toggleVoiceInput}\r\n          className={`p-2 rounded-full mr-2 focus:outline-none ${isVoiceInputActive ? 'bg-red-100 text-red-600' : 'text-gray-500 hover:text-primary-600'}`}\r\n          aria-label=\"Voice input\"\r\n        >\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z\" />\r\n          </svg>\r\n        </button>\r\n        <button \r\n          type=\"button\" \r\n          onClick={toggleImageUpload}\r\n          className={`p-2 rounded-full mr-2 focus:outline-none ${isImageUploadActive ? 'bg-blue-100 text-blue-600' : 'text-gray-500 hover:text-primary-600'}`}\r\n          aria-label=\"Image upload\"\r\n        >\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\r\n          </svg>\r\n        </button>\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Type your message...\"\r\n          className=\"flex-1 border border-gray-300 rounded-full px-4 py-2 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent\"\r\n          disabled={isLoading || isVoiceInputActive || isImageUploadActive}\r\n          ref={inputRef}\r\n        />\r\n        <button \r\n          type=\"submit\" \r\n          className=\"ml-2 bg-primary-600 text-white rounded-full p-2 hover:bg-primary-700 focus:outline-none disabled:opacity-50\"\r\n          disabled={!input.trim() || isLoading || isVoiceInputActive || isImageUploadActive}\r\n          aria-label=\"Send message\"\r\n        >\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n            <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-8.707l-3-3a1 1 0 00-1.414 0l-3 3a1 1 0 001.414 1.414L9 9.414V13a1 1 0 102 0V9.414l1.293 1.293a1 1 0 001.414-1.414z\" clipRule=\"evenodd\" />\r\n          </svg>\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}